// Tracks UserScore and CPU Score
let userScore = 0;
let cpuScore = 0;
let closeBtn;

// Elements
const userScore_span = document.getElementById("user-score");
const cpuScore_span = document.getElementById("cpu-score");
const restart = document.getElementById("restart");
const result = document.getElementById("result");
const modal = document.querySelector(".modal");
const rock_div = document.getElementById("rock");
const paper_div = document.getElementById("paper");
const scissors_div = document.getElementById("scissors");

// Cpu's Choice
function getCpuChoice() {
  const choices = ['rock', 'paper', 'scissors'];
  return choices[Math.floor(Math.random() * 3)];
}

// User Wins
function win(userChoice, cpuChoice) {
  userScore++;
  userScore_span.innerHTML = userScore;
  cpuScore_span.innerHTML = cpuScore;
  result.innerHTML = `<span class="close">&times;</span> 
    <h1 class="text-win">You win!</h1> 
    <p>Computer chose <strong>${cpuChoice}</strong></p>`;
  modal.style.display = 'flex';
}

// User Loses
function lose(userChoice, cpuChoice) {
  cpuScore++;
  userScore_span.innerHTML = userScore;
  cpuScore_span.innerHTML = cpuScore;
  result.innerHTML = `<span class="close">&times;</span> 
    <h1 class="text-lose">You lost</h1> 
    <p>Computer chose <strong>${cpuChoice}</strong></p>`;
  modal.style.display = 'flex';
}

// Draw
function draw(userChoice, cpuChoice) {
  result.innerHTML = `<span class="close">&times;</span> 
    <h1>It's a draw</h1> 
    <p>You both chose <strong>${cpuChoice}</strong></p>`;
  modal.style.display = 'flex';
}

// Play a round
function play(userChoice) {
  const cpuChoice = getCpuChoice();

  // Add click animation
  const userDiv = document.getElementById(userChoice);
  userDiv.classList.add("active");
  setTimeout(() => userDiv.classList.remove("active"), 300);

  switch (userChoice + cpuChoice) {
    case 'rockscissors':
    case 'paperrock':
    case 'scissorspaper':
      win(userChoice, cpuChoice);
      break;
    case 'rockpaper':
    case 'paperscissors':
    case 'scissorsrock':
      lose(userChoice, cpuChoice);
      break;
    default:
      draw(userChoice, cpuChoice);
  }
}

// Event Listeners
function main() {
  rock_div.addEventListener("click", () => play("rock"));
  paper_div.addEventListener("click", () => play("paper"));
  scissors_div.addEventListener("click", () => play("scissors"));
}

function clearModal(e) {
  closeBtn = document.querySelector(".close");
  if (e.target == modal) {
    modal.style.display = "none";
  }
  if (closeBtn) {
    closeBtn.addEventListener("click", () => {
      modal.style.display = "none";
    });
  }
}

// Restart Game
function restartGame() {
  userScore = 0;
  cpuScore = 0;
  userScore_span.innerHTML = userScore;
  cpuScore_span.innerHTML = cpuScore;
}

restart.addEventListener("click", restartGame);
window.addEventListener("click", clearModal);

main();
